{"version":3,"file":"Stars-2de2565f.js","sources":["../../node_modules/react-merge-refs/dist/react-merge-refs.esm.js","../../node_modules/@react-three/drei/core/PointMaterial.js","../../node_modules/@react-three/drei/core/Points.js","../../src/components/canvas/Stars.jsx"],"sourcesContent":["function mergeRefs(refs) {\n  return function (value) {\n    refs.forEach(function (ref) {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport default mergeRefs;\n//# sourceMappingURL=react-merge-refs.esm.js.map\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.PointsMaterial {\n  constructor(props) {\n    super(props);\n\n    this.onBeforeCompile = (shader, renderer) => {\n      const {\n        isWebGL2\n      } = renderer.capabilities;\n      shader.fragmentShader = shader.fragmentShader.replace('#include <output_fragment>', `\n        ${!isWebGL2 ? '#extension GL_OES_standard_derivatives : enable\\n#include <output_fragment>' : '#include <output_fragment>'}\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      float r = dot(cxy, cxy);\n      float delta = fwidth(r);     \n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\n      #include <tonemapping_fragment>\n      #include <encodings_fragment>\n      `);\n    };\n  }\n\n}\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl(null));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst _inverseMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nconst _ray = /*@__PURE__*/new THREE.Ray();\n\nconst _sphere = /*@__PURE__*/new THREE.Sphere();\n\nconst _position = /*@__PURE__*/new THREE.Vector3();\n\nclass PositionPoint extends THREE.Group {\n  constructor() {\n    super();\n    this.size = 0;\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  } // This will allow the virtual instance have bounds\n\n\n  get geometry() {\n    var _this$instance$curren;\n\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  raycast(raycaster, intersects) {\n    var _raycaster$params$Poi, _raycaster$params$Poi2;\n\n    const parent = this.instance.current;\n    if (!parent || !parent.geometry) return;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey); // If the instance wasn't found or exceeds the parents draw range, bail out\n\n    if (instanceId === -1 || instanceId > parent.geometry.drawRange.count) return;\n    const threshold = (_raycaster$params$Poi = (_raycaster$params$Poi2 = raycaster.params.Points) == null ? void 0 : _raycaster$params$Poi2.threshold) !== null && _raycaster$params$Poi !== void 0 ? _raycaster$params$Poi : 1;\n\n    _sphere.set(this.getWorldPosition(_position), threshold);\n\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n    _inverseMatrix.copy(parent.matrixWorld).invert();\n\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n\n    const rayPointDistanceSq = _ray.distanceSqToPoint(_position);\n\n    if (rayPointDistanceSq < localThresholdSq) {\n      const intersectPoint = new THREE.Vector3();\n\n      _ray.closestPointToPoint(_position, intersectPoint);\n\n      intersectPoint.applyMatrix4(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: instanceId,\n        face: null,\n        object: this\n      });\n    }\n  }\n\n}\nlet i, positionRef;\nconst context = /*@__PURE__*/React.createContext(null);\nconst parentMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst position = /*@__PURE__*/new THREE.Vector3();\n/**\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\n */\n\nconst PointsInstances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}, ref) => {\n  const parentRef = React.useRef(null);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\n    length: limit * 3\n  }, () => 1), Float32Array.from({\n    length: limit\n  }, () => 1)]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  useFrame(() => {\n    parentRef.current.updateMatrix();\n    parentRef.current.updateMatrixWorld();\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n\n    for (i = 0; i < refs.length; i++) {\n      positionRef = refs[i].current;\n      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);\n      position.toArray(positions, i * 3);\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\n      positionRef.matrixWorldNeedsUpdate = true;\n      positionRef.color.toArray(colors, i * 3);\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\n      sizes.set([positionRef.size], i);\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    userData: {\n      instances: refs\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / 3,\n    array: positions,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Point = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionPoint\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionPoint\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\n/**\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\n */\n\nconst PointsBuffer = /*#__PURE__*/React.forwardRef(({\n  children,\n  positions,\n  colors,\n  sizes,\n  stride = 3,\n  ...props\n}, forwardedRef) => {\n  const pointsRef = React.useRef(null);\n  useFrame(() => {\n    const attr = pointsRef.current.geometry.attributes;\n    attr.position.needsUpdate = true;\n    if (colors) attr.color.needsUpdate = true;\n    if (sizes) attr.size.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: mergeRefs([forwardedRef, pointsRef])\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / stride,\n    array: positions,\n    itemSize: stride,\n    usage: THREE.DynamicDrawUsage\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / stride,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length / stride,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), children);\n});\nconst Points = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  if (props.positions instanceof Float32Array) {\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\n      ref: forwardedRef\n    }));\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\n    ref: forwardedRef\n  }));\n});\n\nexport { Point, Points, PointsBuffer, PositionPoint };\n","import { useState, useRef, Suspense } from \"react\";\r\nimport { Canvas, useFrame } from \"@react-three/fiber\";\r\nimport { Points, PointMaterial, Preload } from \"@react-three/drei\";\r\nimport * as random from \"maath/random/dist/maath-random.esm\";\r\n\r\nconst Stars = (props) => {\r\n  const ref = useRef();\r\n  const [sphere] = useState(() => random.inSphere(new Float32Array(4500), { radius: 1.2 }));\r\n\r\n  useFrame((state, delta) => {\r\n    ref.current.rotation.x -= delta / 10;\r\n    ref.current.rotation.y -= delta / 15;\r\n  });\r\n\r\n  return (\r\n    <group rotation={[0, 0, Math.PI / 4]}>\r\n      <Points ref={ref} positions={sphere} stride={3} frustumCulled {...props}>\r\n        <PointMaterial\r\n          transparent\r\n          color='#f272c8'\r\n          size={0.002}\r\n          sizeAttenuation={true}\r\n          depthWrite={false}\r\n        />\r\n      </Points>\r\n    </group>\r\n  );\r\n};\r\n\r\nconst StarsCanvas = () => {\r\n  return (\r\n    <div className='w-full h-auto absolute inset-0 z-[-1]'>\r\n      <Canvas camera={{ position: [0, 0, 1] }}>\r\n        <Suspense fallback={null}>\r\n          <Stars />\r\n        </Suspense>\r\n\r\n        <Preload all />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarsCanvas;"],"names":["mergeRefs","refs","value","ref","PointMaterialImpl","THREE.PointsMaterial","props","shader","renderer","isWebGL2","PointMaterial","React.forwardRef","material","React.useState","React.createElement","_extends","positionRef","context","React.createContext","parentMatrix","THREE.Matrix4","position","THREE.Vector3","PointsInstances","children","range","limit","parentRef","React.useRef","setRefs","positions","colors","sizes","React.useEffect","useFrame","api","React.useMemo","item","THREE.DynamicDrawUsage","PointsBuffer","stride","forwardedRef","pointsRef","attr","Points","Stars","useRef","sphere","useState","random.inSphere","state","delta","jsx","StarsCanvas","Canvas","Suspense","Preload"],"mappings":"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","x_google_ignoreList":[0,1,2]}